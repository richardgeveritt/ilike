% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smc_mcmc_move.R
\name{smc_mcmc_move}
\alias{smc_mcmc_move}
\title{SMC with an MCMC move}
\usage{
smc_mcmc_move(
  model,
  number_of_particles,
  parallel_flag = FALSE,
  results_directory = getwd(),
  smc_iterations_to_store = 2,
  write_to_file_at_each_iteration = TRUE,
  model_parameter_list = list(),
  algorithm_parameter_list = list(),
  seed = NULL,
  grain_size = 1e+05
)
}
\arguments{
\item{model}{A file containing the model, or a pre-compiled model list.}

\item{number_of_particles}{The number of particles.}

\item{parallel_flag}{(optional) Set to true to perform the importance sampling in parallel, false for serial.}

\item{results_directory}{The name of the directory to which results will be written.}

\item{smc_iterations_to_store}{(optional) The number of iterations of SMC output stored in memory as the algorithm is running (cannot be fewer than 2).}

\item{write_to_file_at_each_iteration}{(optional) Do we write the algorithm output to file at each SMC step (TRUE/FALSE)?}

\item{model_parameter_list}{(optional) A list containing parameters for the model.}

\item{algorithm_parameter_list}{(optional) A list containing named parameters for the algorithm.}

\item{seed}{(optional) The seed for the random number generator.}

\item{grain_size}{(optional) Sets a minimum chunk size for parallelisation (see https://oneapi-src.github.io/oneTBB/main/tbb_userguide/Controlling_Chunking_os.html).}

\item{number_of_mcmc_iterations}{(optional) The number of MCMC iterations.}

\item{mcmc_termination_method}{(optional) The method used to terminate the MCMC runs.}

\item{adaptive_resampling_ess}{(optional) Resample each time the ESS drops below this value.}

\item{adaptive_resampling_method}{(optional) Specify more generally a method to decide when to reasample.}

\item{adaptive_target_method}{(optional) Specify a method to decide how to adapt the sequence of targets.}

\item{smc_sequencer_method}{(optional) Method that determines the sequence of targets..}

\item{smc_termination_method}{(optional) Method that determines when the SMC terminates (prior to finishing the sequence of targets).}

\item{mcmc_at_last_step}{(optional) Do we run the MCMC at the final step (TRUE/FALSE)?}
}
\value{
Nothing: output can be found in the output_directory.
}
\description{
SMC with an MCMC move
}
