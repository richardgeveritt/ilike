[{"path":"https://richardgeveritt.github.io/ilike/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard G Everitt. Author, maintainer.","code":""},{"path":"https://richardgeveritt.github.io/ilike/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Everitt RG (2025). ilike: Inference Intractable Likelihoods. R package version 0.0.2.3, https://richardgeveritt.github.io/ilike/, https://github.com/richardgeveritt/ilike.","code":"@Manual{,   title = {ilike: Inference for Intractable Likelihoods},   author = {Richard G Everitt},   year = {2025},   note = {R package version 0.0.2.3, https://richardgeveritt.github.io/ilike/},   url = {https://github.com/richardgeveritt/ilike}, }"},{"path":"https://richardgeveritt.github.io/ilike/index.html","id":"ilike","dir":"","previous_headings":"","what":"Inference for Intractable Likelihoods","title":"Inference for Intractable Likelihoods","text":"Implementations number ABC algorithms pseudo-marginal methods dynamic models. Documentation https://richardgeveritt.github.io/ilike_documentation/","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/ENKF.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble Kalman filter — ENKF","title":"Ensemble Kalman filter — ENKF","text":"Ensemble Kalman filter","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/ENKF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble Kalman filter — ENKF","text":"","code":"ENKF(   model,   results_name,   results_path = getwd(),   number_of_ensemble_members,   parallel = FALSE,   enkf_iterations_to_store = 2,   write_to_file_at_each_iteration = TRUE,   model_parameter_list = list(),   algorithm_parameter_list = list(),   fixed_parameter_list = list(),   external_packages = c(),   julia_bin_dir = \"\",   julia_required_libraries = c(),   verify_cpp_function_types = FALSE,   keep_temporary_model_code = FALSE,   seed = NULL,   grain_size = 1e+05 )"},{"path":"https://richardgeveritt.github.io/ilike/reference/ENKF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble Kalman filter — ENKF","text":"model file containing model, pre-compiled model list. results_name name directory results written. results_path (optional) path results folder created (current working directory default). number_of_ensemble_members number ensemble members. parallel (optional) Set true perform importance sampling parallel, false serial. enkf_iterations_to_store (optional) number iterations filter output stored memory algorithm running (fewer 2). write_to_file_at_each_iteration (optional) write algorithm output file filtering step (TRUE/FALSE)? model_parameter_list (optional) list containing parameters model. algorithm_parameter_list (optional) list containing named parameters algorithm. fixed_parameter_list (optional) list containing parameters condition . external_packages (optional) vector names R packages functions rely . julia_bin_dir (optional) directory containing Julia bin file - needed Julia functions used. julia_required_libraries (optional) Vector strings, Julia packge installed loaded. verify_cpp_function_types (optional) TRUE, check types parameters user-defined .cpp functions. FALSE (default), types checked. keep_temporary_model_code (optional) FALSE (default), .cpp file generated compilation deleted. TRUE, seed (optional) seed random number generator. grain_size (optional) Sets minimum chunk size parallelisation (see https://oneapi-src.github.io/oneTBB/main/tbb_userguide/Controlling_Chunking_os.html).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/ENKF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble Kalman filter — ENKF","text":"Estimate marginal likelihood.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/ENKI.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble Kalman inversion — ENKI","title":"Ensemble Kalman inversion — ENKI","text":"Ensemble Kalman inversion","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/ENKI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble Kalman inversion — ENKI","text":"","code":"ENKI(   model,   results_name,   results_path = getwd(),   number_of_ensemble_members,   parallel = FALSE,   enki_iterations_to_store = 2,   write_to_file_at_each_iteration = TRUE,   model_parameter_list = list(),   algorithm_parameter_list = list(),   external_packages = c(),   julia_bin_dir = \"\",   julia_required_libraries = c(),   verify_cpp_function_types = FALSE,   keep_temporary_model_code = FALSE,   seed = NULL,   grain_size = 1e+05 )"},{"path":"https://richardgeveritt.github.io/ilike/reference/ENKI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble Kalman inversion — ENKI","text":"model file containing model, pre-compiled model list. results_name name directory results written. results_path (optional) path results folder created (current working directory default). number_of_ensemble_members number ensemble members. parallel (optional) Set true perform importance sampling parallel, false serial. enki_iterations_to_store (optional) number iterations EnK output stored memory algorithm running (fewer 2). write_to_file_at_each_iteration (optional) write algorithm output file EnK step (TRUE/FALSE)? model_parameter_list (optional) list containing parameters model. algorithm_parameter_list (optional) list containing named parameters algorithm. external_packages (optional) vector names R packages functions rely . julia_bin_dir (optional) directory containing Julia bin file - needed Julia functions used. julia_required_libraries (optional) Vector strings, Julia packge installed loaded. verify_cpp_function_types (optional) TRUE, check types parameters user-defined .cpp functions. FALSE (default), types checked. keep_temporary_model_code (optional) FALSE (default), .cpp file generated compilation deleted. TRUE, seed (optional) seed random number generator. grain_size (optional) Sets minimum chunk size parallelisation (see https://oneapi-src.github.io/oneTBB/main/tbb_userguide/Controlling_Chunking_os.html).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/ENKI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble Kalman inversion — ENKI","text":"Estimate marginal likelihood.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/IS.html","id":null,"dir":"Reference","previous_headings":"","what":"Importance sampler. — IS","title":"Importance sampler. — IS","text":"Importance sampler.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/IS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Importance sampler. — IS","text":"","code":"IS(   model,   results_name,   results_path = getwd(),   number_of_importance_points,   parallel = FALSE,   model_parameter_list = list(),   algorithm_parameter_list = list(),   fixed_parameter_list = list(),   external_packages = c(),   julia_bin_dir = \"\",   julia_required_libraries = c(),   verify_cpp_function_types = FALSE,   keep_temporary_model_code = FALSE,   seed = NULL,   grain_size = 1e+05 )"},{"path":"https://richardgeveritt.github.io/ilike/reference/IS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Importance sampler. — IS","text":"model file containing model, pre-compiled model list. results_name name directory results written. results_path (optional) path results folder created (current working directory default). number_of_importance_points number importance points. parallel (optional) Set true perform importance sampling parallel, false serial. model_parameter_list (optional) list containing parameters model. algorithm_parameter_list (optional) list containing named parameters algorithm. fixed_parameter_list (optional) list containing parameters condition . external_packages (optional) vector names R packages functions rely . julia_bin_dir (optional) directory containing Julia bin file - needed Julia functions used. julia_required_libraries (optional) Vector strings, Julia packge installed loaded. verify_cpp_function_types (optional) TRUE, check types parameters user-defined .cpp functions. FALSE (default), types checked. keep_temporary_model_code (optional) FALSE (default), .cpp file generated compilation deleted. TRUE, seed (optional) seed random number generator. grain_size (optional) Sets minimum chunk size parallelisation (see https://oneapi-src.github.io/oneTBB/main/tbb_userguide/Controlling_Chunking_os.html).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/IS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Importance sampler. — IS","text":"Estimate marginal likelihood.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/KF.html","id":null,"dir":"Reference","previous_headings":"","what":"Kalman filter — KF","title":"Kalman filter — KF","text":"Kalman filter","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/KF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kalman filter — KF","text":"","code":"KF(   model,   results_name,   results_path = getwd(),   kf_iterations_to_store = 2,   write_to_file_at_each_iteration = TRUE,   model_parameter_list = list(),   algorithm_parameter_list = list(),   external_packages = c(),   julia_bin_dir = \"\",   julia_required_libraries = c(),   verify_cpp_function_types = FALSE,   keep_temporary_model_code = FALSE )"},{"path":"https://richardgeveritt.github.io/ilike/reference/KF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kalman filter — KF","text":"model file containing model, pre-compiled model list. results_name name directory results written. results_path (optional) path results folder created (current working directory default). kf_iterations_to_store (optional) number iterations filter output stored memory algorithm running (fewer 2). write_to_file_at_each_iteration (optional) write algorithm output file filtering step (TRUE/FALSE)? model_parameter_list (optional) list containing parameters model. algorithm_parameter_list (optional) list containing named parameters algorithm. external_packages (optional) vector names R packages functions rely . julia_bin_dir (optional) directory containing Julia bin file - needed Julia functions used. julia_required_libraries (optional) Vector strings, Julia packge installed loaded. verify_cpp_function_types (optional) TRUE, check types parameters user-defined .cpp functions. FALSE (default), types checked. keep_temporary_model_code (optional) FALSE (default), .cpp file generated compilation deleted. TRUE,","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/KF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kalman filter — KF","text":"Estimate marginal likelihood.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/MCMC.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC — MCMC","title":"MCMC — MCMC","text":"MCMC","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/MCMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC — MCMC","text":"","code":"MCMC(   model,   results_name,   results_path = getwd(),   number_of_chains = 1,   initial_values = list(),   parallel = FALSE,   model_parameter_list = list(),   algorithm_parameter_list = list(),   fixed_parameter_list = list(),   external_packages = c(),   julia_bin_dir = \"\",   julia_required_libraries = c(),   verify_cpp_function_types = FALSE,   keep_temporary_model_code = FALSE,   seed = NULL,   grain_size = 1e+05 )"},{"path":"https://richardgeveritt.github.io/ilike/reference/MCMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC — MCMC","text":"model file containing model, pre-compiled model list. results_name name directory results written. results_path (optional) path results folder created (current working directory default). number_of_chains (optional) number chains. initial_values (optional) list lists containing initial values chains. parallel (optional) Set true perform MCMC chains parallel, false serial. model_parameter_list (optional) list containing parameters model. algorithm_parameter_list (optional) list containing named parameters algorithm. fixed_parameter_list (optional) list containing parameters condition . external_packages (optional) vector names R packages functions rely . julia_bin_dir (optional) directory containing Julia bin file - needed Julia functions used. julia_required_libraries (optional) Vector strings, Julia packge installed loaded. verify_cpp_function_types (optional) TRUE, check types parameters user-defined .cpp functions. FALSE (default), types checked. keep_temporary_model_code (optional) FALSE (default), .cpp file generated compilation deleted. TRUE, file left working directory. seed (optional) seed random number generator. grain_size (optional) Sets minimum chunk size parallelisation (see https://oneapi-src.github.io/oneTBB/main/tbb_userguide/Controlling_Chunking_os.html).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/MCMC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MCMC — MCMC","text":"Nothing: output can found output_directory.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/PF.html","id":null,"dir":"Reference","previous_headings":"","what":"Particle filter — PF","title":"Particle filter — PF","text":"Particle filter","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/PF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Particle filter — PF","text":"","code":"PF(   model,   results_name,   results_path = getwd(),   number_of_particles,   parallel = FALSE,   smc_iterations_to_store = 2,   write_to_file_at_each_iteration = TRUE,   model_parameter_list = list(),   algorithm_parameter_list = list(),   fixed_parameter_list = list(),   external_packages = c(),   julia_bin_dir = \"\",   julia_required_libraries = c(),   verify_cpp_function_types = FALSE,   keep_temporary_model_code = FALSE,   seed = NULL,   grain_size = 1e+05 )"},{"path":"https://richardgeveritt.github.io/ilike/reference/PF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Particle filter — PF","text":"model file containing model, pre-compiled model list. results_name name directory results written. results_path (optional) path results folder created (current working directory default). number_of_particles number particles. parallel (optional) Set true perform importance sampling parallel, false serial. smc_iterations_to_store (optional) number iterations filter output stored memory algorithm running (fewer 2). write_to_file_at_each_iteration (optional) write algorithm output file filtering step (TRUE/FALSE)? model_parameter_list (optional) list containing parameters model. algorithm_parameter_list (optional) list containing named parameters algorithm. fixed_parameter_list (optional) list containing parameters condition . external_packages (optional) vector names R packages functions rely . julia_bin_dir (optional) directory containing Julia bin file - needed Julia functions used. julia_required_libraries (optional) Vector strings, Julia packge installed loaded. verify_cpp_function_types (optional) TRUE, check types parameters user-defined .cpp functions. FALSE (default), types checked. keep_temporary_model_code (optional) FALSE (default), .cpp file generated compilation deleted. TRUE, seed (optional) seed random number generator. grain_size (optional) Sets minimum chunk size parallelisation (see https://oneapi-src.github.io/oneTBB/main/tbb_userguide/Controlling_Chunking_os.html).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/PF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Particle filter — PF","text":"Estimate marginal likelihood.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/SMC_with_MCMC.html","id":null,"dir":"Reference","previous_headings":"","what":"SMC with an MCMC move — SMC_with_MCMC","title":"SMC with an MCMC move — SMC_with_MCMC","text":"SMC MCMC move","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/SMC_with_MCMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SMC with an MCMC move — SMC_with_MCMC","text":"","code":"SMC_with_MCMC(   model,   results_name,   results_path = getwd(),   number_of_particles,   parallel = FALSE,   smc_iterations_to_store = 2,   write_to_file_at_each_iteration = TRUE,   model_parameter_list = list(),   algorithm_parameter_list = list(),   external_packages = c(),   julia_bin_dir = \"\",   julia_required_libraries = c(),   verify_cpp_function_types = FALSE,   keep_temporary_model_code = FALSE,   seed = NULL,   grain_size = 1e+05 )"},{"path":"https://richardgeveritt.github.io/ilike/reference/SMC_with_MCMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SMC with an MCMC move — SMC_with_MCMC","text":"model file containing model, pre-compiled model list. results_name name directory results written. results_path (optional) path results folder created (current working directory default). number_of_particles number particles. parallel (optional) Set true perform importance sampling parallel, false serial. smc_iterations_to_store (optional) number iterations SMC output stored memory algorithm running (fewer 2). write_to_file_at_each_iteration (optional) write algorithm output file SMC step (TRUE/FALSE)? model_parameter_list (optional) list containing parameters model. algorithm_parameter_list (optional) list containing named parameters algorithm. external_packages (optional) vector names R packages functions rely . julia_bin_dir (optional) directory containing Julia bin file - needed Julia functions used. julia_required_libraries (optional) Vector strings, Julia packge installed loaded. verify_cpp_function_types (optional) TRUE, check types parameters user-defined .cpp functions. FALSE (default), types checked. keep_temporary_model_code (optional) FALSE (default), .cpp file generated compilation deleted. TRUE, seed (optional) seed random number generator. grain_size (optional) Sets minimum chunk size parallelisation (see https://oneapi-src.github.io/oneTBB/main/tbb_userguide/Controlling_Chunking_os.html).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/SMC_with_MCMC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SMC with an MCMC move — SMC_with_MCMC","text":"Estimate marginal likelihood.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/compile.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse .ilike file to give ilike model. — compile","title":"Parse .ilike file to give ilike model. — compile","text":"Parse .ilike file give ilike model.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/compile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse .ilike file to give ilike model. — compile","text":"","code":"compile(   filenames,   model_parameter_list = list(),   R_functions = FALSE,   external_packages = c(),   julia_bin_dir = \"\",   julia_required_libraries = c(),   verify_cpp_function_types = FALSE,   keep_temporary_model_code = FALSE,   nesting_level = 1,   print_block_ends = FALSE )"},{"path":"https://richardgeveritt.github.io/ilike/reference/compile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse .ilike file to give ilike model. — compile","text":"filenames name (path) .ilike files containing model, stored vector one. model_parameter_list (optional) list containing parameters model. R_functions (optional) TRUE, returns R functions. FALSE, returns C++ functions. external_packages (optional) vector names R packages functions rely . julia_bin_dir (optional) directory containing Julia bin file - needed Julia functions used. julia_required_libraries (optional) Vector strings, Julia package installed loaded. verify_cpp_function_types (optional) TRUE, check types parameters user-defined .cpp functions. FALSE (default), types checked. keep_temporary_model_code (optional) FALSE (default), .cpp file generated compilation deleted. TRUE, file left working directory. nesting_level (optional) level nesting current call compile. user always use default 1. print_block_ends (optional) TRUE, print end block code. FALSE (default), print end block code.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/compile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse .ilike file to give ilike model. — compile","text":"list containing model details.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/constant_velocity_x.html","id":null,"dir":"Reference","previous_headings":"","what":"10000 points simulated from a constant velocity linear-Gaussian dynamic model (process noise standard deviation = 1). — constant_velocity_x","title":"10000 points simulated from a constant velocity linear-Gaussian dynamic model (process noise standard deviation = 1). — constant_velocity_x","text":"10000 points simulated constant velocity linear-Gaussian dynamic model (process noise standard deviation = 1).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/constant_velocity_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"10000 points simulated from a constant velocity linear-Gaussian dynamic model (process noise standard deviation = 1). — constant_velocity_x","text":"","code":"constant_velocity_x"},{"path":"https://richardgeveritt.github.io/ilike/reference/constant_velocity_x.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"10000 points simulated from a constant velocity linear-Gaussian dynamic model (process noise standard deviation = 1). — constant_velocity_x","text":"10000*2 matrix.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/constant_velocity_y.html","id":null,"dir":"Reference","previous_headings":"","what":"10000 noisy observations (Gaussian noise, standard deviation 1) of 10000 points simulated from a constant velocity linear-Gaussian dynamic model (process noise standard deviation = 1). — constant_velocity_y","title":"10000 noisy observations (Gaussian noise, standard deviation 1) of 10000 points simulated from a constant velocity linear-Gaussian dynamic model (process noise standard deviation = 1). — constant_velocity_y","text":"10000 noisy observations (Gaussian noise, standard deviation 1) 10000 points simulated constant velocity linear-Gaussian dynamic model (process noise standard deviation = 1).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/constant_velocity_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"10000 noisy observations (Gaussian noise, standard deviation 1) of 10000 points simulated from a constant velocity linear-Gaussian dynamic model (process noise standard deviation = 1). — constant_velocity_y","text":"","code":"constant_velocity_y"},{"path":"https://richardgeveritt.github.io/ilike/reference/constant_velocity_y.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"10000 noisy observations (Gaussian noise, standard deviation 1) of 10000 points simulated from a constant velocity linear-Gaussian dynamic model (process noise standard deviation = 1). — constant_velocity_y","text":"10000*1 matrix.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/gaussian.html","id":null,"dir":"Reference","previous_headings":"","what":"100 points simulated from a Gaussian distribution. — gaussian","title":"100 points simulated from a Gaussian distribution. — gaussian","text":"Generated using rnorm(100).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/gaussian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"100 points simulated from a Gaussian distribution. — gaussian","text":"","code":"gaussian"},{"path":"https://richardgeveritt.github.io/ilike/reference/gaussian.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"100 points simulated from a Gaussian distribution. — gaussian","text":"vector 100 variables","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/ilike.html","id":null,"dir":"Reference","previous_headings":"","what":"ilike: Methods for Bayesian computation when the likelihood is intractable. — ilike","title":"ilike: Methods for Bayesian computation when the likelihood is intractable. — ilike","text":"contains really useful stuff.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/ilike.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"ilike: Methods for Bayesian computation when the likelihood is intractable. — ilike","text":"functions.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/ilike_pivot_wider.html","id":null,"dir":"Reference","previous_headings":"","what":"Take output from the functions load_mcmc_output, load_smc_output or load_enk_output and convert it to a more standard format (non-tidy format with one column per dimension). — ilike_pivot_wider","title":"Take output from the functions load_mcmc_output, load_smc_output or load_enk_output and convert it to a more standard format (non-tidy format with one column per dimension). — ilike_pivot_wider","text":"Take output functions load_mcmc_output, load_smc_output load_enk_output convert standard format (non-tidy format one column per dimension).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/ilike_pivot_wider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take output from the functions load_mcmc_output, load_smc_output or load_enk_output and convert it to a more standard format (non-tidy format with one column per dimension). — ilike_pivot_wider","text":"","code":"ilike_pivot_wider(output, variables = NULL)"},{"path":"https://richardgeveritt.github.io/ilike/reference/ilike_pivot_wider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take output from the functions load_mcmc_output, load_smc_output or load_enk_output and convert it to a more standard format (non-tidy format with one column per dimension). — ilike_pivot_wider","text":"output Output functions load_mcmc_output, load_smc_output load_enk_output. variables (optional) Variables include output (default ).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/load_enk_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading ensemble Kalman output into R memory. — load_enk_output","title":"Loading ensemble Kalman output into R memory. — load_enk_output","text":"Loading ensemble Kalman output R memory.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/load_enk_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading ensemble Kalman output into R memory. — load_enk_output","text":"","code":"load_enk_output(   results_directory,   ggsmc = TRUE,   external_log_weights = c(0),   external_target_parameters = \"\",   nesting_level = 0,   factor = 1 )"},{"path":"https://richardgeveritt.github.io/ilike/reference/load_enk_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading ensemble Kalman output into R memory. — load_enk_output","text":"results_directory folder results stored. ggsmc (optional) Output tidy format plotting ggsmc package. external_log_weights (optional; nested output ) weights importance points external current folder. (default 1, used top level nested output) external_target_parameters (optional; nested output ) parameters target external current folder. (default \"\", corresponding parameters) nesting_level (optional; nested output ) level nesting extract points. (default 0, representing top level nested output) factor (optional; nested output ) factor extract points. (default 0)","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/load_enk_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading ensemble Kalman output into R memory. — load_enk_output","text":"list containing ensemble members (called particles).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/load_mcmc_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading MCMC output into R memory. — load_mcmc_output","title":"Loading MCMC output into R memory. — load_mcmc_output","text":"Loading MCMC output R memory.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/load_mcmc_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading MCMC output into R memory. — load_mcmc_output","text":"","code":"load_mcmc_output(results_directory, ggmcmc = NULL, ilike.output = NULL)"},{"path":"https://richardgeveritt.github.io/ilike/reference/load_mcmc_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading MCMC output into R memory. — load_mcmc_output","text":"results_directory folder results stored. ggmcmc (optional) Output tidy format plotting ggmcmc package (default FALSE ilike.output set TRUE set TRUE otherwise). ilike.output (optional) Output can processed ilike,output package (default TRUE ggmcmc set FALSE set FALSE otherwise). Choosing TRUE argument incompatible ggmcmc=TRUE, since two packages require different formatting output.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/load_mcmc_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading MCMC output into R memory. — load_mcmc_output","text":"list containing MCMC chains.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/load_smc_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading SMC output into R memory. — load_smc_output","title":"Loading SMC output into R memory. — load_smc_output","text":"Loading SMC output R memory.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/load_smc_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading SMC output into R memory. — load_smc_output","text":"","code":"load_smc_output(   results_directory,   ggmcmc = FALSE,   ggsmc = TRUE,   ilike.output = TRUE,   as.mcmc = FALSE,   as.enk = FALSE,   which.targets = NULL,   directory_prefix = \"ilike\",   external_log_weights = c(0),   external_target_parameters = \"\",   nesting_level = 0,   factor = 1 )"},{"path":"https://richardgeveritt.github.io/ilike/reference/load_smc_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading SMC output into R memory. — load_smc_output","text":"results_directory folder results stored. ggmcmc (optional) Output tidy format plotting ggmcmc package. ggsmc (optional) Output tidy format plotting ggsmc package. ilike.output (optional) Output can processed ilike,output package (default TRUE). Choosing TRUE argument incompatiable ggmcmc=TRUE, since two packages require different formatting output. .mcmc (optional) Output treats particles different MCMC chains. .enk (optional) Output treats particles ensemble. .targets (optional) indices targets output (defaults ). directory_prefix (optional; nested output ) first part name directory within results_directory contains results. (default \"ilike\", giving directory results_directory/ilike_smc) external_log_weights (optional; nested output ) weights importance points external current folder. (default 1, used top level nested output) external_target_parameters (optional; nested output ) parameters target external current folder. (default \"\", corresponding parameters) nesting_level (optional; nested output ) level nesting extract points. (default 0, representing top level nested output) factor (optional; nested output ) factor extract points. (default 0)","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/load_smc_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading SMC output into R memory. — load_smc_output","text":"list containing SMC output.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/rdtsc_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a seed for random number generation by using the processor time stamp (calling rdtsc in C). — rdtsc_seed","title":"Gets a seed for random number generation by using the processor time stamp (calling rdtsc in C). — rdtsc_seed","text":"Gets seed random number generation using processor time stamp (calling rdtsc C).","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/rdtsc_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a seed for random number generation by using the processor time stamp (calling rdtsc in C). — rdtsc_seed","text":"","code":"rdtsc_seed()"},{"path":"https://richardgeveritt.github.io/ilike/reference/rdtsc_seed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a seed for random number generation by using the processor time stamp (calling rdtsc in C). — rdtsc_seed","text":"integer.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/toy_model_rwm_ggmcmc.html","id":null,"dir":"Reference","previous_headings":"","what":"100000 points simulated from a two-dimensional posterior using MCMC, in the format required by the ggmcmc package. — toy_model_rwm_ggmcmc","title":"100000 points simulated from a two-dimensional posterior using MCMC, in the format required by the ggmcmc package. — toy_model_rwm_ggmcmc","text":"100000 points simulated two-dimensional posterior using MCMC, format required ggmcmc package.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/toy_model_rwm_ggmcmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"100000 points simulated from a two-dimensional posterior using MCMC, in the format required by the ggmcmc package. — toy_model_rwm_ggmcmc","text":"","code":"toy_model_rwm_ggmcmc"},{"path":"https://richardgeveritt.github.io/ilike/reference/toy_model_rwm_ggmcmc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"100000 points simulated from a two-dimensional posterior using MCMC, in the format required by the ggmcmc package. — toy_model_rwm_ggmcmc","text":"200000 row data frame.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/toy_model_rwm_ilike.html","id":null,"dir":"Reference","previous_headings":"","what":"100000 points simulated from a two-dimensional posterior using MCMC, in the format required by the ilike.output and ggsmc packages. — toy_model_rwm_ilike","title":"100000 points simulated from a two-dimensional posterior using MCMC, in the format required by the ilike.output and ggsmc packages. — toy_model_rwm_ilike","text":"100000 points simulated two-dimensional posterior using MCMC, format required ilike.output ggsmc packages.","code":""},{"path":"https://richardgeveritt.github.io/ilike/reference/toy_model_rwm_ilike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"100000 points simulated from a two-dimensional posterior using MCMC, in the format required by the ilike.output and ggsmc packages. — toy_model_rwm_ilike","text":"","code":"toy_model_rwm_ilike"},{"path":"https://richardgeveritt.github.io/ilike/reference/toy_model_rwm_ilike.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"100000 points simulated from a two-dimensional posterior using MCMC, in the format required by the ilike.output and ggsmc packages. — toy_model_rwm_ilike","text":"200000 row data frame.","code":""}]
